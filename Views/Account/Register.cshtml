@model TechStore.Models.ViewModels.RegisterModel
<title>Register</title>
<html>
<head>
    <style>
        .validation-summary-valid {
            display: none;
        }

        .validation-summary-errors {
            color: red;
            border: 1px solid #ff0000;
            padding: 10px;
            margin-bottom: 20px;
        }

        .field-validation-error {
            color: red;
        }

        .container {
            height: 100%;
            display: flex;
            justify-content: center;
        }

        .sub-container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            width: 20%;
        }

        .info-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin: 20px;
        }

        .info-text-container {
            display: flex;
            justify-content: center;
            font-weight: bold;
            font-size: 15px;
            margin-bottom: 5px;
        }

        .input-box {
            height: 30px;
            width: 250px;
            border: 1px solid #999;
            border-radius: 5px;
        }

        .register-button-container {
            margin: 20px;
            display: flex;
            justify-content: center;
        }

        .register-button {
            background-color: purple;
            border-radius: 5px;
            height: 50px;
            width: 150px;
            color: white;
        }

        .errors-container {
            margin-bottom: 5px;
            display: flex;
            justify-content: center;
        }
    </style>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "validation-summary-errors" })

        <section class="container">
            <section class="sub-container">
                <div class="info-container">
                    <div class="info-text-container">@Html.LabelFor(m => m.FirstName, "First Name:")</div>
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "input-box", name = "firstName" })
                </div>
                <div class="info-container">
                    <div class="info-text-container">@Html.LabelFor(m => m.LastName, "Last Name:")</div>
                    @Html.TextBoxFor(m => m.LastName, new { @class = "input-box", name = "lastName" })
                </div>
                <div class="info-container">
                    <div class="info-text-container">@Html.LabelFor(m => m.Email, "Email:")</div>
                    @Html.TextBoxFor(m => m.Email, new { @class = "input-box", name = "email" })
                </div>
                <div class="info-container">
                    <div class="info-text-container">@Html.LabelFor(m => m.PhoneNumber, "Phone Number:")</div>
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "input-box", name = "phoneNumber" })

                </div>
                <div class="info-container">
                    <div class="info-text-container">@Html.LabelFor(m => m.Password, "Password:")</div>
                    @Html.PasswordFor(m => m.Password, new { @class = "input-box", name = "password" })

                </div>
                <div class="info-container">
                    <div class="info-text-container">@Html.LabelFor(m => m.ConfirmPassword, "Confirm Password:")</div>
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "input-box", name = "confirmPassword" })
                </div>
                <div class="errors-container">@Html.ValidationMessageFor(m => m.FirstName)</div>
                <div class="errors-container">@Html.ValidationMessageFor(m => m.LastName)</div>
                <div class="errors-container">@Html.ValidationMessageFor(m => m.Email)</div>
                <div class="errors-container">@Html.ValidationMessageFor(m => m.PhoneNumber)</div>
                <div class="errors-container">@Html.ValidationMessageFor(m => m.Password)</div>
                <div class="errors-container">@Html.ValidationMessageFor(m => m.ConfirmPassword)</div>
                <div class="register-button-container">
                    <button type="submit" value="Register" class="register-button"><div>Register</div></button>
                </div>
            </section>
        </section>
    }
</body>
</html>