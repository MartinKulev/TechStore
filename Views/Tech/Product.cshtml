@model ProductViewModel
<!DOCTYPE html>
<html>
<head>
    <title>@Model.ProductDisplayModel.Product.Description</title>
    <style>
        .main-container {
            display: flex;
            flex-direction: column;
        }

        .product-box {
            display: flex;
            flex-direction: row;
            align-items: center;
            margin-right: 100px;
            margin-left: 100px;
            margin-top: 30px;
            margin-bottom: 30px;
            padding: 50px;
            background-color: #ffffff;
            box-shadow: 0px 0px 10px rgba(0,0,0,0.4);
            border-radius: 15px;
            height: 700px;
            min-height: 700px;
        }

        .product-image-container {
            width: 50%;
            height: 80%;
            margin-right: 50px;
            display: flex;
            justify-content: center;
        }

        .product-image {
            max-height: 100%;
            max-width: 100%;
            object-fit: contain;
        }

        .product-info {
            padding: 20px;
            height: 90%;
            width: 50%;
            border-left: 2px solid #808080;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .product-data-container {
            font-weight: bold;
            font-size: 24px;
            margin-bottom: 100px;
        }

            .product-data-container div {
                margin-bottom: 30px;
                overflow-wrap: anywhere;
            }

        .product-text-data {
            font-weight: normal;
        }

        .product-price-container {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
        }

        .product-price {
            font-size: 50px;
            font-weight: bold;
            color: #ef2809;
            margin-bottom: 50px;
        }

        .product-button {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 500px;
            height: 100px;
            background: linear-gradient(to right,#ff1d25 5%,#a0328c 35%,#7040a4 45%,#4359c7 55%,#0082e6 70%);
            border-radius: 15px;
            cursor: pointer;
        }

        .product-delete-button {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 500px;
            height: 100px;
            background: linear-gradient(to right,#cf3f50,#fe2d34);
            border-radius: 15px;
            cursor: pointer;
        }

        .product-cart-button {
            display: flex;
            justify-content: center;
            align-items: center;
            border-radius: 15px;
            height: 100px;
            width: 100px;
        }

        .product-bin-button {
            display: flex;
            justify-content: center;
            align-items: center;
            border-radius: 15px;
            height: 100px;
            width: 100px;
        }

        .product-cart-icon {
            font-size: 50px;
            color: #ffffff;
        }

        .product-cart-text {
            margin: 0 auto;
            color: #ffffff;
            font-weight: bold;
            font-size: 30px;
        }

        .add-review-container {
            margin-right: 100px;
            margin-left: 100px;
            margin-top: 50px;
            margin-bottom: 100px;
            display: flex;
            flex-direction: column;
        }

        .information-container {
            display: flex;
            flex-direction: row;
            justify-content: space-between;
        }

        .profile-container {
            display: flex;
            flex-direction: row;
        }

        .profile-picture {
            width: 50px;
            height: 50px;
            border-radius: 50px;
            border: 1px solid #999999;
            background-color: #000000;
        }

        .username-container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            margin: 20px;
        }

        .username {
            align-items: center;
            justify-content: center;
            font-weight: bold;
        }

        .rating-container {
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .rating:not(:checked) > input {
            position: absolute;
            appearance: none;
        }

        .rating:not(:checked) > label {
            float: right;
            cursor: pointer;
            font-size: 30px;
            color: #666666;
        }

            .rating:not(:checked) > label:before {
                content: '★';
            }

        .rating > input:checked + label:hover,
        .rating > input:checked + label:hover ~ label,
        .rating > input:checked ~ label:hover,
        .rating > input:checked ~ label:hover ~ label,
        .rating > label:hover ~ input:checked ~ label {
            color: #e58e09;
        }

        .rating:not(:checked) > label:hover,
        .rating:not(:checked) > label:hover ~ label {
            color: #ff9e0b;
        }

        .rating > input:checked ~ label {
            color: #ffa723;
        }

        .star-color {
            color: #ff9e0b;
        }

        .review-input-box {
            padding: 10px;
            margin-top: 10px;
            margin-bottom: 10px;
            height: 100px;
            width: 100%;
            border: 1px solid #999999;
            font-size: 15px;
            border-radius: 5px;
        }

        .post-review-button-container {
            display: flex;
            justify-content: flex-end;
        }

        .post-review-button {
            background-color: #0082e6;
            border-radius: 5px;
            height: 50px;
            width: 150px;
            color: #ffffff;
        }

        .reviews-heading {
            font-weight: bold;
            font-size: 50px;
        }

        .reviews-heading-container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }

        .posted-reviews-container {
            margin-right: 100px;
            margin-left: 100px;
            margin-top: 30px;
            margin-bottom: 30px;
            display: flex;
            flex-direction: column;
        }

        .review-output-box {
            padding: 10px;
            margin-top: 10px;
            margin-bottom: 10px;
            border: 1px solid #999999;
            font-size: 15px;
            border-radius: 5px;
            height: 100px;
        }

        .command-promotion-container {
            display: flex;
            flex-direction: row;
            justify-content: center;
            margin-right: 100px;
            margin-left: 100px;
            margin-top: 30px;
            margin-bottom: 30px;
        }

        .dicounted-price-label-container {
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .create-promotion-input-box {
            height: 30px;
            width: 60px;
            border: 1px solid #999999;
            font-size: 15px;
            border-radius: 5px;
            margin-right: 10px;
        }

        .create-promotion-button {
            background-color: #0082e6;
            border-radius: 5px;
            height: 30px;
            width: 100px;
            color: #ffffff;
        }

        .command-promotion-heading {
            font-weight: bold;
            font-size: 50px;
        }

        .command-promotion-heading-container {
            display: flex;
            justify-content: center;
        }

        .product-old-price {
            text-decoration: line-through;
            font-size: 40px;
            font-weight: bold;
        }

        @@media (max-device-width: 1000px) {
            .product-box {
                display: flex;
                flex-direction: row;
                justify-content: space-between;
                margin-right: 100px;
                margin-left: 100px;
                margin-top: 30px;
                margin-bottom: 30px;
                padding: 50px;
                background-color: #ffffff;
                box-shadow: 0px 0px 10px rgba(0,0,0,0.4);
                border-radius: 15px;
                height: 900px;
                min-height: 900px;
            }

            .product-image-container {
                max-width: 30%;
                max-height: 30%;
                display: flex;
                justify-content: center;
            }

            .product-button {
                display: flex;
                justify-content: space-between;
                align-items: center;
                width: 350px;
                height: 100px;
                background: linear-gradient(to right,#ff1d25 5%,#a0328c 35%,#7040a4 45%,#4359c7 55%,#0082e6 70%);
                border-radius: 15px;
                cursor: pointer;
            }

            .product-delete-button {
                display: flex;
                justify-content: space-between;
                align-items: center;
                width: 350px;
                height: 100px;
                background: linear-gradient(to right,#cf3f50,#fe2d34);
                border-radius: 15px;
                cursor: pointer;
            }
        }
    </style>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://kit.fontawesome.com/6ca2cc534d.js" crossorigin="anonymous"></script>
    <script>
        $(document).ready(function () {
            $('.rating input').click(function () {
                var ratingValue = $(this).val();
            });
        });
    </script>
</head>
<body>
    <main class="main-container">
        <section class="product-box">
            <div class="product-image-container">
                <img class="product-image" src="@Model.ProductDisplayModel.Product.ImageURL">
            </div>
            <div class="product-info">
                <div class="product-data-container">
                    <div>@Model.ProductDisplayModel.Product.Description</div>
                    <div>• Brand: <span class="product-text-data">@Model.ProductDisplayModel.Product.Brand</span></div>
                    <div>• Model: <span class="product-text-data">@Model.ProductDisplayModel.Product.Model</span></div>
                    <div>• Category: <span class="product-text-data">@Model.ProductDisplayModel.Product.CategoryName</span></div>
                </div>
                <div class="product-price-container">
                    @if (Model.ProductDisplayModel.Product.IsInPromotion)
                    {
                        <p class="product-old-price">$@Model.ProductDisplayModel.Product.Price</p>
                        <p class="product-price">Price: $@Model.ProductDisplayModel.Product.NewPrice</p>
                    }
                    else
                    {
                        <p class="product-price">Price: $@Model.ProductDisplayModel.Product.Price</p>
                    }
                    @if (User.IsInRole("Admin"))
                    {
                        <form method="post" asp-action="DeletedProduct" asp-controller="Product">
                            <button class="product-delete-button" name="productID" value="@Model.ProductDisplayModel.Product.ProductID">
                                <div class="product-bin-button">
                                    <i class="product-cart-icon fa-solid fa-trash-can"></i>
                                </div>
                                <p class="product-cart-text">Delete Product</p>
                            </button>
                        </form>
                    }
                    else
                    {
                        <form method="post" asp-action="ProductAddedToCart" asp-controller="Cart">
                            <button class="product-button" name="productID" value="@Model.ProductDisplayModel.Product.ProductID">
                                <div class="product-cart-button">
                                    <i class="product-cart-icon fa-solid fa-cart-shopping"></i>
                                </div>
                                <p class="product-cart-text">Add to cart</p>
                            </button>
                        </form>
                    }
                </div>
            </div>
        </section>
        @if (User.IsInRole("Admin"))
        {
            @if (Model.ProductDisplayModel.Product.IsInPromotion)
            {
                <div class="command-promotion-heading-container">
                    <h2 class="command-promotion-heading">Revert a promotion:</h2>
                </div>
                <form class="command-promotion-container" method="post" asp-action="RevertedPromotion" asp-controller="Product">
                    <button class="create-promotion-button">Revert</button>
                    <input hidden name="productID" value=@Model.ProductDisplayModel.Product.ProductID />
                </form>
            }
            else
            {
                <div class="command-promotion-heading-container">
                    <h2 class="command-promotion-heading">Create a promotion:</h2>
                </div>
                <form class="command-promotion-container" method="post" asp-action="CreatedPromotion" asp-controller="Product">
                    <div class="dicounted-price-label-container">
                        <label>Discounted Price:  $</label>
                    </div>
                    <input class="create-promotion-input-box" name="newPrice" required />
                    <button class="create-promotion-button">Create</button>
                    <input hidden name="productID" value=@Model.ProductDisplayModel.Product.ProductID />
                </form>
            }
        }
        @if (User.Identity.IsAuthenticated)
        {
            <form class="add-review-container" method="post" asp-action="CreatedReview" asp-controller="Review">
                <input name="productID" value="@Model.ProductDisplayModel.Product.ProductID" hidden />
                <div class="information-container">
                    <div class="profile-container">
                        <img class="profile-picture"></img>
                        <div class="username-container">
                            <p class="username">@User.Identity.Name</p>
                        </div>
                    </div>
                    <div class="rating-container">
                        <div class="rating">
                            @for (int i = 5; i >= 1; i--)
                            {
                                <input value="@i" id="star_@i" type="radio" asp-for="CreateReviewModel.Rating">
                                <label title="@i" for="star_@i"></label>
                            }
                        </div>
                    </div>
                </div>
                <textarea class="review-input-box" placeholder="Write a review about the product..." maxlength="100" required asp-for="CreateReviewModel.Comment"></textarea>
                <div class="post-review-button-container">
                    <button class="post-review-button">Post</button>
                </div>
            </form>
        }
        <section class="reviews-heading-container">
            <div class="reviews-heading">Reviews(@Model.ProductDisplayModel.Reviews.Count):</div>
            @if (!User.Identity.IsAuthenticated)
            {
                <p>(You need to log in to write a review)</p>
            }
        </section>
        @foreach (var review in Model.ProductDisplayModel.Reviews)
        {
            <section class="posted-reviews-container">
                <div class="information-container">
                    <div class="profile-container">
                        <img class="profile-picture"></img>
                        <div class="username-container">
                            <p class="username">@review.User.FirstName @review.User.LastName</p>
                        </div>
                    </div>
                    <div class="rating-container">
                        <div class="rating">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <i class="fa @(review.Rating >= i ? "fa-solid fa-star star-color" : "fa-thin fa-star-o star-color")"></i>
                            }
                        </div>
                    </div>
                </div>
                <article class="review-output-box">@review.Comment</article>
            </section>
        }
    </main>
</body>
</html>